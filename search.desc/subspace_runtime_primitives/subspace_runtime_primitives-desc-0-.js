searchState.loadedDescShard("subspace_runtime_primitives", 0, "Runtime primitives for Subspace Network.\nSome way of identifying an account on the chain. We …\nThe adjustment variable of the runtime. Higher values will …\nThe block weight for 2 seconds of compute\nBalance of an account.\nBlock number in Subspace network.\nSubspace Credits have 18 decimal places.\nDomains Block pruning depth.\nPruning depth multiplier for state and blocks pruning.\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nA trait for finding the address for a block reward based …\nA trait for finding the addresses for voting reward based …\nA hash of some data used by the chain.\nMaximum block length for non-<code>Normal</code> extrinsic is 5 MiB.\nMinimum desired number of replicas of the blockchain to be …\nThe maximum amount of the multiplier.\nMinimum amount of the multiplier. This value cannot be too …\nType used for expressing timestamp.\nA ratio of <code>Normal</code> dispatch class within block, for …\nIndex of a transaction in the chain.\nA trait for determining whether rewards are enabled or not\nThe smallest unit of the token is called Shannon.\n1 in 6 slots (on average, not counting collisions) will …\nOne Subspace Credit.\nAlias to 512-bit hash when used in the context of a …\nParameterized slow adjusting fee updated based on …\nAn Sr25519 signature.\nThe portion of the <code>NORMAL_DISPATCH_RATIO</code> that we adjust …\nCouncil motion duration.\nDemocracy cooloff period.\nDemocracy enactment period.\nFast track voting period.\nLaunch period.\nVote locking period.\nVoting period.\nFast period params for Council democracy config.\nFind the address for a block rewards based on the …\nFind the addresses for voting rewards based on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWe allow for 3.75 MiB for <code>Normal</code> extrinsic with 5 MiB …\nNote the charged storage fee.\nOpaque types.\nProduction params for Council democracy config.\nDetermine whether rewards are enabled or not\nReturn the consensus transaction byte fee.\nRuntime primitives for pallet-utility.\nOpaque block type.\nOpaque block header type.\nSimple blob to hold an extrinsic without committing to its …\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nConvert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe block header.\nCalls <code>U::from(self)</code>.\nThe block number.\nThe parent hash.\nThe state trie merkle root\nApproximate number of blocks in an hour.\nApproximate number of block in a minute.\nApproximate number of blocks in a day.\nExpected block time in milliseconds.\nTrait used to convert from a generated <code>RuntimeCall</code> type to …\nIf this call is a <code>pallet_utility::Call&lt;Runtime&gt;</code> call, …\nReturns an interator over <code>call</code>, and any calls nested …")